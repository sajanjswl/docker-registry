############################
# STEP 1 build executable binary
############################
# golang alpine 1.13.5
FROM golang@sha256:0991060a1447cf648bab7f6bb60335d1243930e38420bee8fec3db1267b84cfa as builder

 RUN apk update && apk add --no-cache git ca-certificates tzdata && update-ca-certificates


ENV USER=appuser
ENV UID=10001

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"



WORKDIR $GOPATH/src/mypackage/myapp/



COPY . .


ENV GO111MODULE=on
RUN go mod download
RUN go mod verify

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
      -ldflags='-w -s -extldflags "-static"' -a \
      -o /go/bin/server ./greet_server


FROM scratch



# Import from builder.
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group



COPY --from=builder /go/bin/server /go/bin/server


 USER appuser:appuser
# RUN pwd

EXPOSE 50051/tcp

ENTRYPOINT ["/go/bin/server"]
